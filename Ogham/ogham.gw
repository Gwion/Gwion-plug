#require Ogham
#require Modules

class Player extends Ogham.Player {
  const SinOsc array[polyphony];
  foreach(a : array)
    0 => a.freq;

  fun void play(const Note note) {
    array[note.index] => const auto sine;
    note.frequency => sine.freq;
    note.velocity => sine.amp;
    note.duration => now;
    0 => sine.freq;
  }

  fun void connect(const UGen u)    { array ~> u; }
  fun void disconnect(const UGen u) { array ~< u; }
}

const Ogham ogh;

const Ogham.Note notes[9];

<<< "setting notes" >>>;
'C' => notes[0].name;
4 => notes[0].octave;
0 => notes[0].offset;
288 => notes[0].duration;

'C' => notes[1].name;
true => notes[1].is_sharp;
4 => notes[1].octave;
288 => notes[1].offset;
32 => notes[1].duration;

'C' => notes[2].name;
4 => notes[2].octave;
320 => notes[2].offset;
32 => notes[2].duration;

'G' => notes[3].name;
3 => notes[3].octave;
352 => notes[3].offset;
32 => notes[3].duration;

'A' => notes[4].name;
true => notes[4].is_sharp;
3 => notes[4].octave;
384 => notes[4].offset;
32 => notes[4].duration;

'C' => notes[5].name;
4 => notes[5].octave;
416 => notes[5].offset;
32 => notes[5].duration;

'E' => notes[6].name;
4 => notes[6].octave;
448 => notes[6].offset;
32 => notes[6].duration;

'G' => notes[7].name;
3 => notes[7].octave;
480 => notes[7].offset;
32 => notes[7].duration;

'A' => notes[8].name;
true => notes[8].is_sharp;
3 => notes[8].octave;
512 => notes[8].offset;
288 => notes[8].duration;

foreach (note: notes)
  60 => note.volume;

<<< "adding notes" >>>;
ogh << notes;

<<< "decoding" >>>;
Player(ogh) => const Player p ~> blackhole;
0.8::second => p.speed;
dac => p.connect;

<<< "playing" >>>;
12::second => now;

<<< "writing" >>>;
ogh.write("test.ogh");
